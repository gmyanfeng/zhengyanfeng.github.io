<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zhengyanfeng.github.io</id>
    <title>Fat Panda</title>
    <updated>2020-01-11T06:31:53.465Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zhengyanfeng.github.io"/>
    <link rel="self" href="https://zhengyanfeng.github.io/atom.xml"/>
    <subtitle>学而时习之</subtitle>
    <logo>https://zhengyanfeng.github.io/images/avatar.png</logo>
    <icon>https://zhengyanfeng.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Fat Panda</rights>
    <entry>
        <title type="html"><![CDATA[macOS 中配置门罗币(XMR)挖矿]]></title>
        <id>https://zhengyanfeng.github.io/post/macos-zhong-pei-zhi-men-luo-bi-xmrwa-kuang</id>
        <link href="https://zhengyanfeng.github.io/post/macos-zhong-pei-zhi-men-luo-bi-xmrwa-kuang">
        </link>
        <updated>2020-01-11T06:25:34.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac 效率工具软件推荐-OpenInTerminal]]></title>
        <id>https://zhengyanfeng.github.io/post/mac-xiao-lu-gong-ju-ruan-jian-tui-jian-openinterminal</id>
        <link href="https://zhengyanfeng.github.io/post/mac-xiao-lu-gong-ju-ruan-jian-tui-jian-openinterminal">
        </link>
        <updated>2020-01-10T06:28:05.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[数据结构和算法-时间和空间复杂度]]></title>
        <id>https://zhengyanfeng.github.io/post/shu-ju-jie-gou-he-suan-fa-shi-jian-he-kong-jian-fu-za-du</id>
        <link href="https://zhengyanfeng.github.io/post/shu-ju-jie-gou-he-suan-fa-shi-jian-he-kong-jian-fu-za-du">
        </link>
        <updated>2019-10-17T03:08:32.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Swift 和 Objective-C 的对比]]></title>
        <id>https://zhengyanfeng.github.io/post/swift-he-objective-c-de-dui-bi</id>
        <link href="https://zhengyanfeng.github.io/post/swift-he-objective-c-de-dui-bi">
        </link>
        <updated>2019-09-19T00:19:34.000Z</updated>
        <summary type="html"><![CDATA[<p>Swift，苹果于2014年 WWDC（苹果开发者大会）发布的新开发语言（已开源），可与 Objective-C 共同运行于 macOS 和 iOS 平台，用于搭建基于苹果平台的应用程序。</p>
]]></summary>
        <content type="html"><![CDATA[<p>Swift，苹果于2014年 WWDC（苹果开发者大会）发布的新开发语言（已开源），可与 Objective-C 共同运行于 macOS 和 iOS 平台，用于搭建基于苹果平台的应用程序。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Markdown Cheatsheet 存档]]></title>
        <id>https://zhengyanfeng.github.io/post/markdown-cheatsheet-cun-dang</id>
        <link href="https://zhengyanfeng.github.io/post/markdown-cheatsheet-cun-dang">
        </link>
        <updated>2019-07-31T09:58:27.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端-HTML基础知识]]></title>
        <id>https://zhengyanfeng.github.io/post/qian-duan-html-ji-chu-zhi-shi</id>
        <link href="https://zhengyanfeng.github.io/post/qian-duan-html-ji-chu-zhi-shi">
        </link>
        <updated>2019-07-31T08:24:42.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flutter-页面间的跳转]]></title>
        <id>https://zhengyanfeng.github.io/post/flutter-ye-mian-jian-de-tiao-zhuan</id>
        <link href="https://zhengyanfeng.github.io/post/flutter-ye-mian-jian-de-tiao-zhuan">
        </link>
        <updated>2019-07-25T08:45:23.000Z</updated>
        <summary type="html"><![CDATA[<p>在App中，到处都存在页面间的跳转，从A页面跳转到B页面，可以更加方便使用，所以在 Flutter 中页面间的跳转是怎样实现的呢？</p>
]]></summary>
        <content type="html"><![CDATA[<p>在App中，到处都存在页面间的跳转，从A页面跳转到B页面，可以更加方便使用，所以在 Flutter 中页面间的跳转是怎样实现的呢？</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flutter-Card卡片组件布局]]></title>
        <id>https://zhengyanfeng.github.io/post/flutter-viewlist-qia-pian-zu-jian-bu-ju</id>
        <link href="https://zhengyanfeng.github.io/post/flutter-viewlist-qia-pian-zu-jian-bu-ju">
        </link>
        <updated>2019-07-24T11:07:11.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flutter-Stack布局]]></title>
        <id>https://zhengyanfeng.github.io/post/flutter-stack-bu-ju</id>
        <link href="https://zhengyanfeng.github.io/post/flutter-stack-bu-ju">
        </link>
        <updated>2019-07-24T10:20:25.000Z</updated>
        <summary type="html"><![CDATA[<p>Stack 可以处理一些层叠的布局</p>
<pre><code>
import 'package:flutter/material.dart';

void main() =&gt; runApp(MyApp());

class MyApp extends StatelessWidget{
  
  @override
  Widget build(BuildContext context) {
    
    var stack = Stack(
      alignment: FractionalOffset(0.5, 0.8), // 1
      children: &lt;Widget&gt;[
        CircleAvatar(
          backgroundImage: NetworkImage('http://img5.mtime.cn/mg/2019/01/25/100903.64806042_170X256X4.jpg'),
          radius: 100.0,
        ),

        Container(
          decoration: BoxDecoration(
            color: Colors.lightBlue,
          ),

          padding: EdgeInsets.all(5),
          child: Text('fat panda'),
        )
      ],
    );
    
    return MaterialApp(
      title: 'Stack Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Stack Demo'),
        ),
        
        body: Center(
          child: stack,
        ),
      ),
    );
  }
}

</code></pre>
<figure data-type="image" tabindex="1"><img src="https://zhengyanfeng.github.io/post-images/1563965795927.png" alt="stack" loading="lazy"></figure>
<ol>
<li>alignment 控制层叠的位置，有 X 轴距离和 Y 轴距离，值从0~1，从上级容器的左上角开始</li>
</ol>
]]></summary>
        <content type="html"><![CDATA[<p>Stack 可以处理一些层叠的布局</p>
<pre><code>
import 'package:flutter/material.dart';

void main() =&gt; runApp(MyApp());

class MyApp extends StatelessWidget{
  
  @override
  Widget build(BuildContext context) {
    
    var stack = Stack(
      alignment: FractionalOffset(0.5, 0.8), // 1
      children: &lt;Widget&gt;[
        CircleAvatar(
          backgroundImage: NetworkImage('http://img5.mtime.cn/mg/2019/01/25/100903.64806042_170X256X4.jpg'),
          radius: 100.0,
        ),

        Container(
          decoration: BoxDecoration(
            color: Colors.lightBlue,
          ),

          padding: EdgeInsets.all(5),
          child: Text('fat panda'),
        )
      ],
    );
    
    return MaterialApp(
      title: 'Stack Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Stack Demo'),
        ),
        
        body: Center(
          child: stack,
        ),
      ),
    );
  }
}

</code></pre>
<figure data-type="image" tabindex="1"><img src="https://zhengyanfeng.github.io/post-images/1563965795927.png" alt="stack" loading="lazy"></figure>
<ol>
<li>alignment 控制层叠的位置，有 X 轴距离和 Y 轴距离，值从0~1，从上级容器的左上角开始</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flutter-水平垂直布局]]></title>
        <id>https://zhengyanfeng.github.io/post/flutter-ui-bu-ju</id>
        <link href="https://zhengyanfeng.github.io/post/flutter-ui-bu-ju">
        </link>
        <updated>2019-07-24T09:13:27.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="row-水平布局">Row 水平布局</h1>
<p>Row 控件可以分为灵活布局和非灵活布局</p>
<h2 id="非灵活布局">非灵活布局</h2>
<pre><code>
import 'package:flutter/material.dart';

void main() =&gt; runApp(MyApp());

class MyApp extends StatelessWidget{

  @override
  Widget build(BuildContext context) {

    return MaterialApp(
      title: 'Row Demo',

      home: Scaffold(
        appBar: AppBar(
          title: Text('Row Demo'),
        ),

        body: Row(
          children: &lt;Widget&gt;[
            RaisedButton(onPressed: (){

            },
              color: Colors.redAccent,
              child: Text('red button'),
            ),

            RaisedButton(onPressed: (){

            },
              color: Colors.greenAccent,
              child: Text('green button'),
            ),

            RaisedButton(onPressed: (){

              },
            color: Colors.blueAccent,
            child: Text('blue button'),
            ),
          ],
        )
      ),
    );
  }
}

</code></pre>
<figure data-type="image" tabindex="1"><img src="https://zhengyanfeng.github.io/post-images/1563960746714.png" alt="row_no_flexiable" loading="lazy"></figure>
<p>如图3个按钮排成一列，但是并没有根据屏幕宽度大小自动更改 button 的宽度，平分屏幕的宽度。</p>
]]></summary>
        <content type="html"><![CDATA[<h1 id="row-水平布局">Row 水平布局</h1>
<p>Row 控件可以分为灵活布局和非灵活布局</p>
<h2 id="非灵活布局">非灵活布局</h2>
<pre><code>
import 'package:flutter/material.dart';

void main() =&gt; runApp(MyApp());

class MyApp extends StatelessWidget{

  @override
  Widget build(BuildContext context) {

    return MaterialApp(
      title: 'Row Demo',

      home: Scaffold(
        appBar: AppBar(
          title: Text('Row Demo'),
        ),

        body: Row(
          children: &lt;Widget&gt;[
            RaisedButton(onPressed: (){

            },
              color: Colors.redAccent,
              child: Text('red button'),
            ),

            RaisedButton(onPressed: (){

            },
              color: Colors.greenAccent,
              child: Text('green button'),
            ),

            RaisedButton(onPressed: (){

              },
            color: Colors.blueAccent,
            child: Text('blue button'),
            ),
          ],
        )
      ),
    );
  }
}

</code></pre>
<figure data-type="image" tabindex="1"><img src="https://zhengyanfeng.github.io/post-images/1563960746714.png" alt="row_no_flexiable" loading="lazy"></figure>
<p>如图3个按钮排成一列，但是并没有根据屏幕宽度大小自动更改 button 的宽度，平分屏幕的宽度。</p>
]]></content>
    </entry>
</feed>